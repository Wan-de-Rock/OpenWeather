version: '3.4'

#networks:
#  corp:
#    driver: bridge

services:
  openweather_api:
    image: openweather_api
    build:
      context: .
      dockerfile: Src/Infrastructure/OpenWeather.WebAPI/Dockerfile
#    networks:
#      - corp
    ports:
    - "5020:5020"
    - "7020:7020"
    environment:
      ASPNETCORE_URLS: "https://+;http://+"
      ASPNETCORE_HTTPS_PORT: "7020"
      ASPNETCORE_ENVIRONMENT: "Development"
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: "false"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    restart: always
  
  openweather_client:
    image: openweather_client
    build:
      context: ./Src/Presentation/OpenWeather.AngularUI
      dockerfile: Dockerfile
#    networks:
#      - corp
    ports:
    - "80:80"
    restart: always
    depends_on:
      - openweather_api
    
  #proxy_nginx:
  #  image: nginx:stable-alpine
  #  volumes:
  #    - ./nginx.conf:/etc/nginx/nginx.conf
  #  ports:
  #    - "80:80"